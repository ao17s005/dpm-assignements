end = 0.8) +
labs(title = "Depression Scores", subtitle = "split for gender and social media exposure" )+
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
legend.position = c(0.93, 0.93),
legend.background = element_rect(fill = "white", color = "white"))
ggplot(dat, aes(x = "", y = dep, fill = girl)) +
# clouds
introdataviz::geom_flat_violin(trim = FALSE, alpha = 0.4,
position = position_nudge(x = rain_height + .05)) +
geom_point(aes(colour = girl),
size = 2, alpha = .5, show.legend = FALSE,
position = position_jitter (width = rain_height, height = 0)) + # boxplots
geom_boxplot(width = rain_height,
alpha = 0.4, show.legend = FALSE, outlier.shape = NA,
position = position_nudge(x = -rain_height*2)) +
# mean and SE point in the cloud
stat_summary(fun.data = mean_cl_normal, mapping = aes(color = girl), show.legend = FALSE,
position = position_nudge (x = rain_height *3)) +
#layout
scale_x_discrete(name = "", expand = c(rain_height*4, 0, 0, 0.7)) +
scale_y_continuous(name = "Depression", breaks = seq(1, 5, 1), limits = c(1, 5)) +
coord_flip() +
facet_wrap(~ factor(exp, levels = c("0", "1"),
labels = c("No Social Media", "Social Media Exposure")),
nrow = 2) +
scale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
scale_colour_viridis_d(option = "H", begin = 0.2,
end = 0.8) +
labs(title = "Depression Scores", subtitle = "split for gender and social media exposure" )+
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
legend.position = c(0.95, 0.93),
legend.background = element_rect(fill = "white", color = "white"))
ggplot(dat, aes(x = "", y = dep, fill = girl)) +
# clouds
introdataviz::geom_flat_violin(trim = FALSE, alpha = 0.4,
position = position_nudge(x = rain_height + .05)) +
geom_point(aes(colour = girl),
size = 2, alpha = .5, show.legend = FALSE,
position = position_jitter (width = rain_height, height = 0)) + # boxplots
geom_boxplot(width = rain_height,
alpha = 0.4, show.legend = FALSE, outlier.shape = NA,
position = position_nudge(x = -rain_height*2)) +
# mean and SE point in the cloud
stat_summary(fun.data = mean_cl_normal, mapping = aes(color = girl), show.legend = FALSE,
position = position_nudge (x = rain_height *3)) +
#layout
scale_x_discrete(name = "", expand = c(rain_height*4, 0, 0, 0.7)) +
scale_y_continuous(name = "Depression", breaks = seq(1, 5, 1), limits = c(1, 5)) +
coord_flip() +
facet_wrap(~ factor(exp, levels = c("0", "1"),
labels = c("No Social Media", "Social Media Exposure")),
nrow = 2) +
scale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
scale_colour_viridis_d(option = "H", begin = 0.2,
end = 0.8) +
labs(title = "Depression Scores", subtitle = "split for gender and social media exposure" )+
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
legend.position = c(0.95, 0.96),
legend.background = element_rect(fill = "white", color = "white"))
ggplot(dat, aes(x = "", y = dep, fill = girl)) +
# clouds
introdataviz::geom_flat_violin(trim = FALSE, alpha = 0.4,
position = position_nudge(x = rain_height + .05)) +
geom_point(aes(colour = girl),
size = 2, alpha = .5, show.legend = FALSE,
position = position_jitter (width = rain_height, height = 0)) + # boxplots
geom_boxplot(width = rain_height,
alpha = 0.4, show.legend = FALSE, outlier.shape = NA,
position = position_nudge(x = -rain_height*2)) +
# mean and SE point in the cloud
stat_summary(fun.data = mean_cl_normal, mapping = aes(color = girl), show.legend = FALSE,
position = position_nudge (x = rain_height *3)) +
#layout
scale_x_discrete(name = "", expand = c(rain_height*4, 0, 0, 0.7)) +
scale_y_continuous(name = "Depression", breaks = seq(1, 5, 1), limits = c(1, 5)) +
coord_flip() +
facet_wrap(~ factor(exp, levels = c("0", "1"),
labels = c("No Social Media", "Social Media Exposure")),
nrow = 2) +
scale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
scale_colour_viridis_d(option = "H", begin = 0.2,
end = 0.8) +
labs(title = "Depression Scores", subtitle = "split for gender and social media exposure" )+
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
legend.position = c(0.90, 0.96),
legend.background = element_rect(fill = "white", color = "white"))
ggplot(dat, aes(x = exp, y = dep, fill = girl)) +
geom_bar(stat="identity", position= position_dodge())
knitr::opts_chunk$set(echo = TRUE)
# opennes
ggplot(data_processed_after_exclusion, aes(x = mean_bfi_o)) +
geom_histogram(binwidth = 1) +
scale_colour_viridis_d()
# opennes
ggplot(data_processed_after_exclusion, aes(x = mean_bfi_o)) +
geom_histogram(binwidth = 1) +
scale_colour_viridis_d()+
scale_y_continuous(name = "Number of participants",
breaks = c(0,1000, 2000, 3000, 4000)) +
scale_x_continuous(name = "Opennes (likert-scale)",
breaks = c(1,2, 3, 4, 5, 6)) +
theme_dark()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(tidyverse)
library(knitr)
library(kableExtra)
library(janitor)
library(scales)
data_processed <- read_csv("../../data/processed/data_processed.csv")
# Exclude participants using the master exclusion variable.
data_processed_after_exclusion <- data_processed |>
filter(exclude_participant == "include")
# Create a table with the total number of participants before exclusions.
data_processed |>
count(name = "n") |>
kable() |>
add_header_above(header = c("Whole sample" = 1)) |>
kable_classic(full_width = FALSE)
# Create a table with the total number of participants after exclusions.
data_processed_after_exclusion |>
count(name = "n") |>
kable() |>
add_header_above(header = c("For analysis" = 1)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
mutate(age = as.numeric(age)) |>
summarise(Mean = mean(age, na.rm = TRUE),
SD = sd(age, na.rm = TRUE)) |>
mutate_all(.funs = janitor::round_half_up, digits = 1) |>
kable() |>
add_header_above(header = c("Age" = 2)) |>
kable_classic(full_width = FALSE)
# opennes
ggplot(data_processed_after_exclusion, aes(x = mean_bfi_o)) +
geom_histogram(binwidth = 1) +
scale_colour_viridis_d()+
scale_y_continuous(name = "Number of participants",
breaks = c(0,1000, 2000, 3000, 4000)) +
scale_x_continuous(name = "Opennes (likert-scale)",
breaks = c(1,2, 3, 4, 5, 6)) +
theme_dark()
# opennes
ggplot(data_processed_after_exclusion, aes(x = mean_bfi_o)) +
geom_histogram(binwidth = 1) +
scale_colour_viridis_d()+
scale_y_continuous(name = "Number of participants",
breaks = c(0,1000, 2000, 3000, 4000)) +
scale_x_continuous(name = "Opennes (likert-scale)",
breaks = c(1,2, 3, 4, 5, 6)) +
theme_minimal()
# opennes
ggplot(data_processed_after_exclusion, aes(x = mean_bfi_o)) +
geom_histogram(binwidth = 1) +
scale_y_continuous(name = "Number of participants",
breaks = c(0,1000, 2000, 3000, 4000)) +
scale_x_continuous(name = "Opennes (likert-scale)",
breaks = c(1,2, 3, 4, 5, 6)) +
scale_colour_viridis_d() +
theme_minimal()
# opennes
ggplot(data_processed_after_exclusion, aes(x = mean_bfi_o)) +
geom_histogram(binwidth = 1) +
scale_y_continuous(name = "Number of participants",
breaks = c(0,1000, 2000, 3000, 4000)) +
scale_x_continuous(name = "Opennes (likert-scale)",
breaks = c(1,2, 3, 4, 5, 6)) +
scale_fill_viridis_d() +
theme_minimal()
# opennes
ggplot(data_processed_after_exclusion, aes(x = mean_bfi_o)) +
geom_histogram(binwidth = 1) +
scale_y_continuous(name = "Number of participants",
breaks = c(0,1000, 2000, 3000, 4000)) +
scale_x_continuous(name = "Opennes (likert-scale)",
breaks = c(1,2, 3, 4, 5, 6)) +
scale_fill_viridis_d(option= "A") +
theme_minimal()
# opennes
ggplot(data_processed_after_exclusion, aes(x = mean_bfi_o)) +
geom_histogram(binwidth = 1) +
scale_y_continuous(name = "Number of participants",
breaks = c(0,1000, 2000, 3000, 4000)) +
scale_x_continuous(name = "Opennes (likert-scale)",
breaks = c(1,2, 3, 4, 5, 6)) +
scale_fill_viridis_d(option= "A") +
scale_colour_viridis_d(option= "A") +
theme_minimal()
# opennes
ggplot(data_processed_after_exclusion, aes(x = mean_bfi_o)) +
geom_histogram(binwidth = 1, pad = TRUE) +
scale_y_continuous(name = "Number of participants",
breaks = c(0,1000, 2000, 3000, 4000)) +
scale_x_continuous(name = "Opennes (likert-scale)",
breaks = c(1,2, 3, 4, 5, 6)) +
scale_fill_viridis_d(option= "A") +
scale_colour_viridis_d(option= "A") +
theme_minimal()
# opennes
ggplot(data_processed_after_exclusion, aes(x = mean_bfi_o)) +
geom_histogram(binwidth = 1, pad = TRUE, fill = "wheat",
colour = "coral3") +
scale_y_continuous(name = "Number of participants",
breaks = c(0,1000, 2000, 3000, 4000)) +
scale_x_continuous(name = "Opennes (likert-scale)",
breaks = c(1,2, 3, 4, 5, 6)) +
scale_fill_viridis_d(option= "A") +
scale_colour_viridis_d(option= "A") +
theme_minimal()
# iat
ggplot(data_processed_after_exclusion, aes(x = D)) +
geom_histogram(binwidth = 0.1,
fill = "darkblue",
colour = "mistyrose") +
scale_y_continuous(name = "Number of participants",
breaks = c(0,1000, 2000, 3000, 4000)) +
scale_x_continuous(name = "D Score ",
breaks = c(-1,-.75, -0.5, -0.25, 0, 0.25)) +
theme_minimal()
# correlation between depression and bmi
ggplot(dat, aes(x = dep, y = bmi_new, colour= girl)) +
geom_point() +
geom_smooth(method = "lm") +
scale_color_discrete(name = "Sex", labels = c("Boy", "Girl")) +
theme_grey()
# correlation between depression and self
ggplot(dat, aes(x = self, y = dep, colour= girl)) +
geom_point() +
geom_smooth(method = "lm") +
scale_color_discrete(name = "Sex", labels = c("Boy", "Girl")) +
theme_grey()
# set knit options
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
# disable scientific notation
options(scipen = 999)
library(tidyverse)
library(knitr)
library(kableExtra)
library(janitor)
library(scales)
data_processed <- read_csv("../data/processed/data_processed.csv")
data_processed_after_exclusions <- data_processed |>
filter(exclude_participant == "include")
data_processed |>
count(name = "n") |>
kable() |>
add_header_above(header = c("Whole sample" = 1)) |> # note that you can add header rows to tables like this. The "1" indicates the number of columns the header should span. The sum of these numbers must equal the number of columns or you'll get an error.
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
count(name = "n") |>
kable() |>
add_header_above(header = c("For analysis" = 1)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
mutate(age = as.numeric(age)) |>
summarise(Mean = mean(age, na.rm = TRUE),
SD = sd(age, na.rm = TRUE)) |>
mutate_all(.funs = janitor::round_half_up, digits = 1) |>
kable() |>
add_header_above(header = c("Age" = 2)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
rename(Gender = gender) |>
group_by(Gender) |>
summarise(n = n()) |>
mutate(Percent = paste0(round_half_up((n / sum(n)) * 100, 1), "%")) |>
mutate(Gender = stringr::str_to_sentence(Gender)) |> # Change the case of the Gender variable so that it prints nicely
kable() |>
kable_classic(full_width = FALSE)
# overall self-reported evaluations
dat_mean_ratings <- data_processed_after_exclusions |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n()) |>
mutate(group = "Full sample")
# self-reported evaluations by gender category
dat_mean_ratings_by_gender <- data_processed_after_exclusions |>
group_by(group = gender) |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n())
# combine both into one table
bind_rows(dat_mean_ratings,
dat_mean_ratings_by_gender) |>
select(Subset = group, Mean, SD, n) |> # select variables of interest, and rename one
mutate(Subset = stringr::str_to_sentence(Subset)) |> # Change the case of the Subset variable so that it prints nicely
mutate_if(is.numeric, round_half_up, digits = 2) |>
kable() |>
add_header_above(header = c(" " = 1, "Self-reported evaluations" = 3)) |>
kable_classic(full_width = FALSE)
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation)) +
geom_histogram(binwidth = 1,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("Mean self-reported evaluation") +
ylab("Frequency") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(1, 7)) +
theme(panel.grid.minor = element_blank())
ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("AMP score") +
ylab("Frequency") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 10))
# self-reported evaluation as dependent variable
ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_linedraw()
# amp score as dependent variable
ggplot(data_processed_after_exclusions,
aes(y = AMP_score,
x = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
ylab("AMP score") +
xlab("Mean self-reported evaluation") +
theme_linedraw()
ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_linedraw()
library(ggExtra)
library(scales) #for viridis
# histogram by gender
histogram <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation, colour = gender)) +
geom_point() +
geom_smooth(aes(color = gender), method = "lm", se = FALSE) +  # Regression line by gender
scale_colour_manual(name = "gender",
values = c("female" = "#73D055FF", "male" = "#404788FF", "nonbinary" = "#FDE725FF")) +
theme(legend.position = c(.15, .7), legend.background = element_rect(color = "black",
size = 0.5)) +
labs(x = "Self-report Evaluations", y = "AMP Score",
title ="Relationship")
ggMarginal(histogram, type = "histogram", groupColour = TRUE, groupFill = TRUE)
library(ggExtra)
library(scales) #for viridis
# histogram by gender
histogram <- ggplot(dat,
aes(x = self,
y = dep, colour = girl)) +
geom_point() +
geom_smooth(aes(color = girl), method = "lm", se = FALSE) +  # Regression line by gender
cale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
theme(legend.position = c(.15, .7), legend.background = element_rect(color = "black",
size = 0.5)) +
labs(x = "Self-report Evaluations", y = "AMP Score",
title ="Relationship")
# histogram by gender
histogram <- ggplot(dat,
aes(x = self,
y = dep, colour = girl)) +
geom_point() +
geom_smooth(aes(color = girl), method = "lm", se = FALSE) +  # Regression line by gender
scale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
theme(legend.position = c(.15, .7), legend.background = element_rect(color = "black",
size = 0.5)) +
labs(x = "Self-report Evaluations", y = "AMP Score",
title ="Relationship")
# histogram by gender
ggplot(dat,
aes(x = self,
y = dep, colour = girl)) +
geom_point() +
geom_smooth(aes(color = girl), method = "lm", se = FALSE) +  # Regression line by gender
scale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
theme(legend.position = c(.15, .7), legend.background = element_rect(color = "black",
size = 0.5)) +
labs(x = "Self-report Evaluations", y = "AMP Score",
title ="Relationship")
# histogram by gender
ggplot(dat,
aes(x = self,
y = dep, colour = girl)) +
geom_point() +
geom_smooth(aes(color = girl), method = "lm", se = FALSE) +  # Regression line by gender
scale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
theme(legend.position = c(.15, .7), legend.background = element_rect(color = "black",
size = 0.5)) +
labs(x = "Self-report Evaluations", y = "AMP Score",
title ="Relationship") +
theme_minimal
# histogram by gender
ggplot(dat,
aes(x = self,
y = dep, colour = girl)) +
geom_point() +
geom_smooth(aes(color = girl), method = "lm", se = FALSE) +  # Regression line by gender
scale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
theme(legend.position = c(.15, .7), legend.background = element_rect(color = "black",
size = 0.5)) +
labs(x = "Self-report Evaluations", y = "AMP Score",
title ="Relationship") +
theme_minimal()
# histogram by gender
ggplot(dat,
aes(x = self,
y = dep, colour = girl)) +
geom_point() +
geom_smooth(aes(color = girl), method = "lm", se = FALSE) +  # Regression line by gender
scale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
theme(legend.position = c(.15, .7), legend.background = element_rect(color = "white",
size = 0.5)) +
labs(x = "Self-report Evaluations", y = "AMP Score",
title ="Relationship") +
theme_minimal()
# histogram by gender
ggplot(dat,
aes(x = self,
y = dep, colour = girl)) +
geom_point() +
geom_smooth(aes(color = girl), method = "lm", se = FALSE) +  # Regression line by gender
scale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
theme(legend.position = c(.15, .7),
legend.background = element_rect(color = "black", fill = "white", size = 0.5)) +
labs(x = "Self-image (likert-scale)", y = "Depression Score (likert-scale)",
title ="Relationship") +
theme_minimal()
# histogram by gender
ggplot(dat,
aes(x = self,
y = dep, colour = girl)) +
geom_point() +
geom_smooth(aes(color = girl), method = "lm", se = FALSE) +  # Regression line by gender
theme(legend.position = c(.15, .7),
legend.background = element_rect(color = "black", fill = "white", size = 0.5)) +
labs(x = "Self-image (likert-scale)", y = "Depression Score (likert-scale)",
title ="Relationship") +
theme_minimal()
# histogram by gender
ggplot(dat, aes(x = self, y = dep, colour = girl)) +
geom_point() +
geom_smooth(aes(color = girl), method = "lm", se = FALSE) + # Regression line by gender
scale_color_discrete(name = "Sex", labels = c("Boy", "Girl")) +
theme(legend.position = c(.15, .7),
legend.background = element_rect(color = "black", fill = "white", size = 0.5)) +
labs(x = "Self-image (likert-scale)", y = "Depression Score (likert-scale)",
title ="Relationship") +
theme_minimal()
#raincloud plot
rain_height <- .1
library(introdataviz)
ggplot(dat, aes(x = "", y = dep, fill = girl)) +
# clouds
introdataviz::geom_flat_violin(trim = FALSE, alpha = 0.4,
position = position_nudge(x = rain_height + .05)) +
geom_point(aes(colour = girl),
size = 2, alpha = .5, show.legend = FALSE,
position = position_jitter (width = rain_height, height = 0)) + # boxplots
geom_boxplot(width = rain_height,
alpha = 0.4, show.legend = FALSE, outlier.shape = NA,
position = position_nudge(x = -rain_height*2)) +
# mean and SE point in the cloud
stat_summary(fun.data = mean_cl_normal, mapping = aes(color = girl), show.legend = FALSE,
position = position_nudge (x = rain_height *3)) +
#layout
scale_x_discrete(name = "", expand = c(rain_height*4, 0, 0, 0.7)) +
scale_y_continuous(name = "Depression", breaks = seq(1, 5, 1), limits = c(1, 5)) +
coord_flip() +
facet_wrap(~ factor(exp, levels = c("0", "1"),
labels = c("No Social Media", "Social Media Exposure")),
nrow = 2) +
scale_fill_viridis_d(option = "H", name = "Gender", labels = c("Boys", "Girls"), begin = 0.2,
end = 0.8) +
scale_colour_viridis_d(option = "H", begin = 0.2,
end = 0.8) +
labs(title = "Depression Scores", subtitle = "split for gender and social media exposure" )+
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
legend.position = c(0.90, 0.96),
legend.background = element_rect(fill = "white", color = "white"))
ggsave("plot_good_AngelaOppenberg.pdf", plot = last_plot(), dpi = 300)
ggplot(dat, aes(x = exp, y = dep, fill = girl)) +
geom_bar(stat="identity", position= position_dodge())
#Write to desk
ggsave("plot_bad_AngelaOppenbergt.pdf", plot = last_plot(), dpi = 300)
